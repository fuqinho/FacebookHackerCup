#include <iostream>
#include <vector>
using namespace std;

#define dump(x)  cerr << #x << " = " << (x) << endl;

static const long long MODULO = 4207849484;

long long solve(int M, string status) {
    vector<long long> dp(status.size() + 1);
    dp[0] = 1;
    for (int i = 1; i <= status.size(); i++) {
        if (i >= 1) {
            int n = status[i-1] - '0';
            if (n >= 1 && n <= M) {
                dp[i] += dp[i-1];
                dp[i] %= MODULO;
            }
        }
        if (i >= 2) {
            int n = (status[i-2] - '0') * 10 + status[i-1] - '0';
            if (status[i-2] != '0' && n >= 1 && n <= M) {
                dp[i] += dp[i-2];
                dp[i] %= MODULO;
            }
        }
        if (i >= 3) {
            int n = (status[i-3] - '0') * 100 + (status[i-2] - '0') * 10 + status[i-1] - '0';
            if (status[i-3] != '0' && n >= 1 && n <= M) {
                dp[i] += dp[i-3];
                dp[i] %= MODULO;
            }
        }
    }
    return dp[status.size()];
}

int main() {
    //long long hoge = solve
    //dump(hoge);
    int N; cin >> N;
    for (int i = 0; i < N; i++) {
        int M;
        string status;
        cin >> M >> status;
        long long ans = solve(M, status);
        cout << "Case #" << i+1 << ": " << ans << endl;
    }
}

